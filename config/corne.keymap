/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
            // combo_tab {
            //     timeout-ms = <50>;
            //     key-positions = <10 11>;
            //     bindings = <&kp TAB>;
            // };
            // combo_ralt {
            //     timeout-ms = <50>;
            //     key-positions = <17 16>;
            //     bindings = <&kp RALT>;
            // };
            // combo_lalt {
            //     timeout-ms = <50>;
            //     key-positions = <11 12>;
            //     bindings = <&kp LALT>;
            // };
            // combo_lgui {
            //     timeout-ms = <50>;
            //     key-positions = <12 13>;
            //     bindings = <&kp LGUI>;
            // };
            // combo_rgui {
            //     timeout-ms = <50>;
            //     key-positions = <17 18>;
            //     bindings = <&kp RGUI>;
            // };     
        };
        
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "homerow mods";
                #binding-cells = <2>;
                tapping_term_ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            hs: homerow_shifts {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_SHIFTS";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
            hsl: homerow_shifts_layer {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_SHIFTS_LAYER";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&to>;
            };
            td: tapdance {
                compatible = "zmk,behavior-hold-tap";
                label = "TAPDANCE";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            bl: layertap {
                compatible = "zmk,behavior-hold-tap";
                label = "LAYERTAP";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&to>, <&kp>;
            };
        };
            
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
        &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp SEMI &kp BSPC
        &kp LCTRL &hm LCTL  A &kp S &kp H &kp T &kp G   &kp Y &kp N  &kp E     &kp O  &kp I    &kp SQT
        &kp LSHFT &hs LSHIFT Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &hs RSHIFT FSLH &kp RSHFT
                        &kp LGUI &mo 1 &kp LALT   &kp SPACE &mo 2 &kp RET
                        >;
                };
                
                lower_layer {
                        bindings = <
        &kp ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
        &kp LCTRL &trans   &mt LG(LS(LC(N4))) &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
        &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                        &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                raise_layer {
                        bindings = <
        &kp TAB    &bt BT_NXT   &bt BT_SEL 0 &kp LPAR    &kp RPAR &kp UNDER       &kp MINUS &kp N7   &kp N8 &kp N9  &kp DOT   &kp BSPC
        &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &kp LBKT    &kp RBKT &kp PIPE        &kp PLUS  &kp N4   &kp N5 &kp N6  &kp FSLH  &kp KP_MULTIPLY
        &kp LSHFT  &bt BT_SEL 3 &bt BT_SEL 4 &kp LBRC    &kp RBRC &kp BSLH        &kp N0    &kp N1   &kp N2 &kp N3  &kp EQUAL &trans
                                             &kp LGUI    &trans   &kp SPACE       &trans    &trans   &trans
                        >;
                };

                tri_layer {
                    bindings = <
    &kp TAB    &bt BT_NXT   &bt BT_SEL 0 &kp LPAR    &kp RPAR &kp UNDER       &kp MINUS &kp N7   &kp N8 &kp N9  &kp DOT   &kp BSPC
    &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &kp LBKT    &kp RBKT &kp PIPE        &kp PLUS  &kp N4   &kp N5 &kp N6  &kp FSLH  &mt LG(LS(LC(N4)))
    &kp LSHFT  &bt BT_SEL 3 &bt BT_SEL 4 &kp LBRC    &kp RBRC &kp BSLH        &kp N0    &kp N1   &kp N2 &kp N3  &kp EQUAL &trans
                                         &kp LGUI    &trans   &kp SPACE       &trans    &trans   &trans
                    >;
            };
        };
};
